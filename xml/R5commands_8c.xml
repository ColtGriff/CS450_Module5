<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.0" xml:lang="en-US">
  <compounddef id="R5commands_8c" kind="file" language="C++">
    <compoundname>R5commands.c</compoundname>
    <includes refid="serial_8h" local="no">core/serial.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes refid="mpx__supt_8h" local="yes">../mpx_supt.h</includes>
    <includes refid="io_8h" local="no">core/io.h</includes>
    <includes refid="heap_8h" local="no">mem/heap.h</includes>
    <includes refid="utilities_8h" local="yes">../utilities.h</includes>
    <includes refid="R2commands_8h" local="yes">../R2/R2commands.h</includes>
    <includes refid="R2__Internal__Functions__And__Structures_8h" local="yes">../R2/R2_Internal_Functions_And_Structures.h</includes>
    <includes refid="R5commands_8h" local="yes">R5commands.h</includes>
    <includes refid="R1commands_8h" local="yes">../R1/R1commands.h</includes>
    <incdepgraph>
      <node id="8">
        <label>../utilities.h</label>
        <link refid="utilities_8h"/>
      </node>
      <node id="4">
        <label>system.h</label>
        <link refid="system_8h"/>
      </node>
      <node id="9">
        <label>../R2/R2commands.h</label>
        <link refid="R2commands_8h"/>
      </node>
      <node id="7">
        <label>mem/heap.h</label>
        <link refid="heap_8h"/>
      </node>
      <node id="6">
        <label>core/io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="12">
        <label>../R1/R1commands.h</label>
        <link refid="R1commands_8h"/>
      </node>
      <node id="2">
        <label>core/serial.h</label>
        <link refid="serial_8h"/>
      </node>
      <node id="5">
        <label>../mpx_supt.h</label>
        <link refid="mpx__supt_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../R2/R2_Internal_Functions_And_Structures.h</label>
        <link refid="R2__Internal__Functions__And__Structures_8h"/>
      </node>
      <node id="3">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>modules/R5/R5commands.c</label>
        <link refid="R5commands_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>R5commands.h</label>
        <link refid="R5commands_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" prot="public" static="no" mutable="no">
        <type><ref refid="structmemList" kindref="compound">memList</ref></type>
        <definition>memList freeList</definition>
        <argsstring></argsstring>
        <name>freeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="17" column="9" bodyfile="modules/R5/R5commands.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" prot="public" static="no" mutable="no">
        <type><ref refid="structmemList" kindref="compound">memList</ref></type>
        <definition>memList allocatedList</definition>
        <argsstring></argsstring>
        <name>allocatedList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="18" column="9" bodyfile="modules/R5/R5commands.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="R5commands_8c_1af3d616b5c012c21679ea62614227584b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void showMCB</definition>
        <argsstring>(CMCB *mem)</argsstring>
        <name>showMCB</name>
        <param>
          <type><ref refid="structCMCB" kindref="compound">CMCB</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="315" column="6" bodyfile="modules/R5/R5commands.c" bodystart="315" bodyend="346" declfile="modules/R5/R5commands.c" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1a3974816887b02af340a7c42ba05ac167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref></type>
        <definition>u32int initializeHeap</definition>
        <argsstring>(u32int heapSize)</argsstring>
        <name>initializeHeap</name>
        <param>
          <type><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref></type>
          <declname>heapSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="20" column="8" bodyfile="modules/R5/R5commands.c" bodystart="20" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertToList</definition>
        <argsstring>(CMCB *current, memList *list)</argsstring>
        <name>insertToList</name>
        <param>
          <type><ref refid="structCMCB" kindref="compound">CMCB</ref> *</type>
          <declname>current</declname>
        </param>
        <param>
          <type><ref refid="structmemList" kindref="compound">memList</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="46" column="6" bodyfile="modules/R5/R5commands.c" bodystart="46" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1ac29b5f08753e9d141c41ff15cfa98531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref></type>
        <definition>u32int allocateMemory</definition>
        <argsstring>(u32int size)</argsstring>
        <name>allocateMemory</name>
        <param>
          <type><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="90" column="8" bodyfile="modules/R5/R5commands.c" bodystart="90" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1ab8e0b399d1b70a7a190ad0b667d7e9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void removeFromAlloc</definition>
        <argsstring>(CMCB *temp)</argsstring>
        <name>removeFromAlloc</name>
        <param>
          <type><ref refid="structCMCB" kindref="compound">CMCB</ref> *</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="189" column="6" bodyfile="modules/R5/R5commands.c" bodystart="189" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1a5c0d38019c891a8fb9908d0a913c747f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int freeMemory</definition>
        <argsstring>(void *memToFree)</argsstring>
        <name>freeMemory</name>
        <param>
          <type>void *</type>
          <declname>memToFree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="215" column="5" bodyfile="modules/R5/R5commands.c" bodystart="215" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1a653c98c68c558505b75b04c44b7c838e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="301" column="5" bodyfile="modules/R5/R5commands.c" bodystart="301" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1a78f265af6466c31b931ada3661c34b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void showFreeMemory</definition>
        <argsstring>()</argsstring>
        <name>showFreeMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="348" column="6" bodyfile="modules/R5/R5commands.c" bodystart="348" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="R5commands_8c_1ab05bf24239e14068ca690422a41c7da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void showAllocatedMemory</definition>
        <argsstring>()</argsstring>
        <name>showAllocatedMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/R5/R5commands.c" line="363" column="6" bodyfile="modules/R5/R5commands.c" bodystart="363" bodyend="376"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>R5<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>of<sp/>the<sp/>commands<sp/>in<sp/>this<sp/>file<sp/>are<sp/>temporary!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="serial_8h" kindref="compound">core/serial.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../mpx_supt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">core/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="heap_8h" kindref="compound">mem/heap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../utilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../R2/R2commands.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../R2/R2_Internal_Functions_And_Structures.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="R5commands_8h" kindref="compound">R5commands.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../R1/R1commands.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1af3d616b5c012c21679ea62614227584b" kindref="member">showMCB</ref>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*mem);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" refkind="member"><highlight class="normal"><ref refid="structmemList" kindref="compound">memList</ref><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>;</highlight></codeline>
<codeline lineno="18" refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" refkind="member"><highlight class="normal"><ref refid="structmemList" kindref="compound">memList</ref><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="R5commands_8h_1a3974816887b02af340a7c42ba05ac167" refkind="member"><highlight class="normal"><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref><sp/><ref refid="R5commands_8c_1a3974816887b02af340a7c42ba05ac167" kindref="member">initializeHeap</ref>(<ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref><sp/>heapSize)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref><sp/>memStart<sp/>=<sp/><ref refid="heap_8h_1a15d6a52c5c080c8c7ffc73e336d8e574" kindref="member">kmalloc</ref>(heapSize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCMCB" kindref="compound">CMCB</ref>));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*)memStart;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>first<sp/>free<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>=<sp/>memStart<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>=<sp/>heapSize;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//strcpy(temp-&gt;name,<sp/>&quot;first&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>alllocated<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>first<sp/>free<sp/>block<sp/>into<sp/>the<sp/>free<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memStart;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" kindref="member">insertToList</ref>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*current,<sp/><ref refid="structmemList" kindref="compound">memList</ref><sp/>*list)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="comment">//<sp/>current<sp/>is<sp/>put<sp/>into<sp/>an<sp/>empty<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>&lt;<sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>)<sp/></highlight><highlight class="comment">//<sp/>current<sp/>goes<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>&gt;<sp/>list-&gt;<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref>-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>)<sp/></highlight><highlight class="comment">//<sp/>current<sp/>goes<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>list-&gt;<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>current<sp/>goes<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/>list-&gt;<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>&lt;<sp/>temp-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="R5commands_8h_1ac29b5f08753e9d141c41ff15cfa98531" refkind="member"><highlight class="normal"><ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref><sp/><ref refid="R5commands_8c_1ac29b5f08753e9d141c41ff15cfa98531" kindref="member">allocateMemory</ref>(<ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref><sp/>size)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*current<sp/>=<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>to<sp/>block<sp/>of<sp/>appropriate<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>==<sp/>size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCMCB" kindref="compound">CMCB</ref>)<sp/>&amp;&amp;<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>free<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>current<sp/>in<sp/>alloc<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" kindref="member">insertToList</ref>(current,<sp/>&amp;<ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>current<sp/>marker<sp/>to<sp/>&apos;a&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>all<sp/>freeList<sp/>pointers<sp/>to<sp/>current.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>allocated<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>==<sp/>size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCMCB" kindref="compound">CMCB</ref>))<sp/></highlight><highlight class="comment">//<sp/>current<sp/>is<sp/>excetly<sp/>the<sp/>size<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>free<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>current<sp/>in<sp/>alloc<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" kindref="member">insertToList</ref>(current,<sp/>&amp;<ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>current<sp/>marker<sp/>to<sp/>&apos;a&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>allocated<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>&gt;<sp/>size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCMCB" kindref="compound">CMCB</ref>))<sp/></highlight><highlight class="comment">//<sp/>current<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>free<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*)(current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>+<sp/>size);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>CMCB<sp/>pertains<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the<sp/>free<sp/>list<sp/>at<sp/>the<sp/>new<sp/>memory<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>=<sp/>(current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>+<sp/>size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>));<sp/></highlight><highlight class="comment">//<sp/>Could<sp/>be<sp/>tmp-&gt;beginningAddr<sp/>+<sp/>size<sp/>+<sp/>sizeof(CMCB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;size<sp/>=<sp/>current-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>-<sp/>size<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;type<sp/>=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;nextCMCB<sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/>current<sp/>&amp;&amp;<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>==<sp/>current)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/>current)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>==<sp/>current)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>current<sp/>in<sp/>alloc<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" kindref="member">insertToList</ref>(current,<sp/>&amp;<ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>current<sp/>marker<sp/>to<sp/>&apos;a&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>allocated<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="R5commands_8c_1ab8e0b399d1b70a7a190ad0b667d7e9f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1ab8e0b399d1b70a7a190ad0b667d7e9f7" kindref="member">removeFromAlloc</ref>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>temp<sp/>from<sp/>allocatedList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="R5commands_8h_1a5c0d38019c891a8fb9908d0a913c747f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1a5c0d38019c891a8fb9908d0a913c747f" kindref="member">freeMemory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*memToFree)<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a653c98c68c558505b75b04c44b7c838e" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>memory<sp/>to<sp/>free!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>!=<sp/>(<ref refid="system_8h_1a757de76cafbcddaac0d1632902fe4cb8" kindref="member">u32int</ref>)memToFree)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>allocated<sp/>memory<sp/>at<sp/>that<sp/>address!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>memToFree<sp/>from<sp/>the<sp/>allocatedList.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1ab8e0b399d1b70a7a190ad0b667d7e9f7" kindref="member">removeFromAlloc</ref>(temp);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>memToFree<sp/>into<sp/>the<sp/>freeList<sp/>in<sp/>increasing<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a05782ba4294925abab214e1f3221fc08" kindref="member">insertToList</ref>(temp,<sp/>&amp;<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>memToFree<sp/>to<sp/>other<sp/>free<sp/>CMCBs<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref><sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>+<sp/>temp-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref>)<sp/>==<sp/>(temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCMCB" kindref="compound">CMCB</ref>)))<sp/></highlight><highlight class="comment">//<sp/>merge<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;Memory<sp/>merge<sp/>down\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*next<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+=<sp/>(next-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>next-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;Merge<sp/>down<sp/>part<sp/>2\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*next<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+=<sp/>(next-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>+<sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref>)<sp/>==<sp/>(temp-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>)))<sp/></highlight><highlight class="comment">//merge<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;Memory<sp/>merge<sp/>up\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*prev<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+=<sp/>(temp-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="R5commands_8h_1a37e892ee192f8d6724e74e747f447e74" kindref="member">CMCB</ref>));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="structCMCB_1a1280be0dd5b355366ecef12d58e1d65f" kindref="member">prevCMCB</ref><sp/>=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref>--;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1ac42044ac93f3e8c22927959d14076707" kindref="member">tail</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>else<sp/>statement<sp/>to<sp/>free<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>Function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="R5commands_8h_1a653c98c68c558505b75b04c44b7c838e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1a653c98c68c558505b75b04c44b7c838e" kindref="member">isEmpty</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1aff9670eeb5c6fe9a9ca5e2d9d4cd5add" kindref="member">count</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>allocated<sp/>list<sp/>is<sp/>empty.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mpx__supt_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>allocated<sp/>list<sp/>is<sp/>not<sp/>empty.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mpx__supt_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="R5commands_8c_1af3d616b5c012c21679ea62614227584b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1af3d616b5c012c21679ea62614227584b" kindref="member">showMCB</ref>(<ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*mem)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeLen;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>block<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>CMCBs<sp/>type<sp/>is:<sp/>allocated.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem-&gt;<ref refid="structCMCB_1a851499290a994f91125af9896dd48ba4" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>CMCBs<sp/>type<sp/>is:<sp/>free.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>block<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>size[20];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1ace6ee45c30e71865e6eb635200379db9" kindref="member">memset</ref>(size,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>20);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a1eb9cae61e6a6282c28dbc298ef7297e" kindref="member">strcpy</ref>(size,<sp/><ref refid="utilities_8c_1a2eb4e84d30d30f692f4ee87348aac05b" kindref="member">itoa</ref>(mem-&gt;<ref refid="structCMCB_1ab57441d157c83e917b3a6e49dc3988d2" kindref="member">size</ref>,<sp/>size));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeLen<sp/>=<sp/><ref refid="string_8h_1a2dee044e4e667b5b789b493abd21cfa4" kindref="member">strlen</ref>(size);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>size<sp/>is:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpx__supt_8c_1aaa3eb70f93cb8acf38ec0d028b9874f0" kindref="member">sys_req</ref>(<ref refid="mpx__supt_8h_1aa10f470e996d0f51210d24f442d25e1e" kindref="member">WRITE</ref>,<sp/><ref refid="mpx__supt_8h_1a84cb8bbda8042a324f49102bc200cc54" kindref="member">DEFAULT_DEVICE</ref>,<sp/>size,<sp/>&amp;sizeLen);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>bytes.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>block<sp/>beginning<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[20];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1ace6ee45c30e71865e6eb635200379db9" kindref="member">memset</ref>(temp,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>20);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string_8h_1a1eb9cae61e6a6282c28dbc298ef7297e" kindref="member">strcpy</ref>(temp,<sp/><ref refid="utilities_8c_1a2eb4e84d30d30f692f4ee87348aac05b" kindref="member">itoa</ref>(mem-&gt;<ref refid="structCMCB_1a572a6034769bc1e7e36fa18d625c00ce" kindref="member">beginningAddr</ref>,<sp/>temp));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeLen<sp/>=<sp/><ref refid="string_8h_1a2dee044e4e667b5b789b493abd21cfa4" kindref="member">strlen</ref>(temp);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>beginning<sp/>address<sp/>of<sp/>the<sp/>block<sp/>is:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpx__supt_8c_1aaa3eb70f93cb8acf38ec0d028b9874f0" kindref="member">sys_req</ref>(<ref refid="mpx__supt_8h_1aa10f470e996d0f51210d24f442d25e1e" kindref="member">WRITE</ref>,<sp/><ref refid="mpx__supt_8h_1a84cb8bbda8042a324f49102bc200cc54" kindref="member">DEFAULT_DEVICE</ref>,<sp/>temp,<sp/>&amp;sizeLen);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="R5commands_8h_1a78f265af6466c31b931ada3661c34b4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1a78f265af6466c31b931ada3661c34b4f" kindref="member">showFreeMemory</ref>()</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>free<sp/>memory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/><ref refid="R5commands_8c_1a607caa385f1c0466956b56e389268dd9" kindref="member">freeList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1af3d616b5c012c21679ea62614227584b" kindref="member">showMCB</ref>(temp);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="R5commands_8h_1ab05bf24239e14068ca690422a41c7da1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="R5commands_8c_1ab05bf24239e14068ca690422a41c7da1" kindref="member">showAllocatedMemory</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref><sp/>==<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utilities_8c_1a6b64e960aa5ad14e823de069f78c9b83" kindref="member">printMessage</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>allocated<sp/>memory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCMCB" kindref="compound">CMCB</ref><sp/>*temp<sp/>=<sp/><ref refid="R5commands_8c_1a822ca42df9c8b5a50b371bf8ed974096" kindref="member">allocatedList</ref>.<ref refid="structmemList_1af6fdf46706ed450959c04551a82eee20" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>!=<sp/><ref refid="system_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="R5commands_8c_1af3d616b5c012c21679ea62614227584b" kindref="member">showMCB</ref>(temp);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;<ref refid="structCMCB_1a8373a72b145f15cb1d80b7baaf19ead3" kindref="member">nextCMCB</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="modules/R5/R5commands.c"/>
  </compounddef>
</doxygen>
