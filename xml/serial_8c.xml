<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.0" xml:lang="en-US">
  <compounddef id="serial_8c" kind="file" language="C++">
    <compoundname>serial.c</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes refid="io_8h" local="no">core/io.h</includes>
    <includes refid="serial_8h" local="no">core/serial.h</includes>
    <incdepgraph>
      <node id="4">
        <label>system.h</label>
        <link refid="system_8h"/>
      </node>
      <node id="1">
        <label>kernel/core/serial.c</label>
        <link refid="serial_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>core/io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="6">
        <label>core/serial.h</label>
        <link refid="serial_8h"/>
      </node>
      <node id="3">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" prot="public" static="no">
        <name>NO_ERROR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="12" column="9" bodyfile="kernel/core/serial.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int serial_port_out</definition>
        <argsstring></argsstring>
        <name>serial_port_out</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="15" column="5" bodyfile="kernel/core/serial.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="serial_8c_1a1a756238531fc5bf1096f89dc18e835e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int serial_port_in</definition>
        <argsstring></argsstring>
        <name>serial_port_in</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="16" column="5" bodyfile="kernel/core/serial.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="serial_8c_1a7078c07ff8b2c48780558549a8f7cf90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_serial</definition>
        <argsstring>(int device)</argsstring>
        <name>init_serial</name>
        <param>
          <type>int</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="22" column="5" bodyfile="kernel/core/serial.c" bodystart="22" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="serial_8c_1a3514f7abff236a4e00a6c46021ce5e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int serial_println</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>serial_println</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="40" column="5" bodyfile="kernel/core/serial.c" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int serial_print</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>serial_print</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="56" column="5" bodyfile="kernel/core/serial.c" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="serial_8c_1ae97b87ee1f57c687e7fca6f9958e03ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int set_serial_out</definition>
        <argsstring>(int device)</argsstring>
        <name>set_serial_out</name>
        <param>
          <type>int</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="74" column="5" bodyfile="kernel/core/serial.c" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="serial_8c_1a3f4008da5feabfb7e086f6673a81104b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int set_serial_in</definition>
        <argsstring>(int device)</argsstring>
        <name>set_serial_in</name>
        <param>
          <type>int</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="86" column="5" bodyfile="kernel/core/serial.c" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="serial_8c_1ab1d1d36bd91339352f5b66f809b34d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* polling</definition>
        <argsstring>(char *buffer, int *count)</argsstring>
        <name>polling</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kernel/core/serial.c" line="92" column="5" bodyfile="kernel/core/serial.c" bodystart="92" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>-----<sp/>serial.c<sp/>-----</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Description..:<sp/>Contains<sp/>methods<sp/>and<sp/>variables<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>serial<sp/>input<sp/>and<sp/>output.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">core/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="serial_8h" kindref="compound">core/serial.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NO_ERROR<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Active<sp/>devices<sp/>used<sp/>for<sp/>serial<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16" refid="serial_8c_1a1a756238531fc5bf1096f89dc18e835e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a1a756238531fc5bf1096f89dc18e835e" kindref="member">serial_port_in</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Procedure..:<sp/>init_serial</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>Description..:<sp/>Initializes<sp/>devices<sp/>for<sp/>user<sp/>interaction,<sp/>logging,<sp/>...</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="serial_8c_1a7078c07ff8b2c48780558549a8f7cf90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a7078c07ff8b2c48780558549a8f7cf90" kindref="member">init_serial</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>1,<sp/>0x00);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>3,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>line<sp/>control<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>0,<sp/>115200<sp/>/<sp/>9600);<sp/></highlight><highlight class="comment">//set<sp/>bsd<sp/>least<sp/>sig<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>1,<sp/>0x00);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//brd<sp/>most<sp/>significant<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>3,<sp/>0x03);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lock<sp/>divisor;<sp/>8bits,<sp/>no<sp/>parity,<sp/>one<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>2,<sp/>0xC7);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//enable<sp/>fifo,<sp/>clear,<sp/>14byte<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(device<sp/>+<sp/>4,<sp/>0x0B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//enable<sp/>interrupts,<sp/>rts/dsr<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>(void)<ref refid="io_8h_1ad6488a48837d179b1833e2f48dac9665" kindref="member">inb</ref>(device);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>bit<sp/>to<sp/>reset<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" kindref="member">NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/>Procedure..:<sp/>serial_println</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>Description..:<sp/>Writes<sp/>a<sp/>message<sp/>to<sp/>the<sp/>active<sp/>serial<sp/>output<sp/>device.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>Appends<sp/>a<sp/>newline<sp/>character.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="serial_8c_1a3514f7abff236a4e00a6c46021ce5e22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a3514f7abff236a4e00a6c46021ce5e22" kindref="member">serial_println</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>*(i<sp/>+<sp/>msg)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(<ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref>,<sp/>*(i<sp/>+<sp/>msg));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(<ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref>,<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(<ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" kindref="member">NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>Procedure..:<sp/>serial_print</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>Description..:<sp/>Writes<sp/>a<sp/>message<sp/>to<sp/>the<sp/>active<sp/>serial<sp/>output<sp/>device.</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>*(i<sp/>+<sp/>msg)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(<ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref>,<sp/>*(i<sp/>+<sp/>msg));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*msg<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a0e661d36f40638a36550a534076f155b" kindref="member">outb</ref>(<ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" kindref="member">NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*int<sp/>(*student_read)(char<sp/>*buffer,<sp/>int<sp/>*count);</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>Procedure..:<sp/>set_serial_out</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>Description..:<sp/>Sets<sp/>serial_port_out<sp/>to<sp/>the<sp/>given<sp/>device<sp/>address.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>All<sp/>serial<sp/>output,<sp/>such<sp/>as<sp/>that<sp/>from<sp/>serial_println,<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>directed<sp/>to<sp/>this<sp/>device.</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="serial_8c_1ae97b87ee1f57c687e7fca6f9958e03ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1ae97b87ee1f57c687e7fca6f9958e03ef" kindref="member">set_serial_out</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="serial_8c_1adbb2c18b0aaab5c1927a6f674768a710" kindref="member">serial_port_out</ref><sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" kindref="member">NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/>Procedure..:<sp/>set_serial_in</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/>Description..:<sp/>Sets<sp/>serial_port_in<sp/>to<sp/>the<sp/>given<sp/>device<sp/>address.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>All<sp/>serial<sp/>input,<sp/>such<sp/>as<sp/>console<sp/>input<sp/>via<sp/>a<sp/>virtual<sp/>machine,</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>QEMU/Bochs/etc,<sp/>will<sp/>be<sp/>directed<sp/>to<sp/>this<sp/>device.</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="serial_8c_1a3f4008da5feabfb7e086f6673a81104b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a3f4008da5feabfb7e086f6673a81104b" kindref="member">set_serial_in</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="serial_8c_1a1a756238531fc5bf1096f89dc18e835e" kindref="member">serial_port_in</ref><sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="serial_8c_1a258bb72419ef143530a2f8f55e7d57af" kindref="member">NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="serial_8c_1ab1d1d36bd91339352f5b66f809b34d8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="serial_8c_1ab1d1d36bd91339352f5b66f809b34d8c" kindref="member">polling</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*count)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>your<sp/>code<sp/>to<sp/>gather<sp/>keyboard<sp/>input<sp/>via<sp/>the<sp/>technique<sp/>of<sp/>polling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>keyboard_character;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>log[]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>characters_in_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="io_8h_1ad6488a48837d179b1833e2f48dac9665" kindref="member">inb</ref>(<ref refid="serial_8h_1a00dbb3ab1c59e14699be9393693e2248" kindref="member">COM1</ref><sp/>+<sp/>5)<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>there<sp/>input<sp/>char?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keyboard_character<sp/>=<sp/><ref refid="io_8h_1ad6488a48837d179b1833e2f48dac9665" kindref="member">inb</ref>(<ref refid="serial_8h_1a00dbb3ab1c59e14699be9393693e2248" kindref="member">COM1</ref>);<sp/></highlight><highlight class="comment">//read<sp/>the<sp/>char<sp/>from<sp/>COM1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>HANDLEING<sp/>THE<sp/>CARRIAGE<sp/>RETURN<sp/>AND<sp/>NEW<sp/>LINE<sp/>CHARACTERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[characters_in_buffer]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((keyboard_character<sp/>==<sp/>127<sp/>||<sp/>keyboard_character<sp/>==<sp/>8)<sp/>&amp;&amp;<sp/>cursor<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>HANDELING<sp/>THE<sp/>BACKSPACE<sp/>CHARACTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//serial_println(&quot;Handleing<sp/>backspace<sp/>character.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\033[K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[cursor<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\b<sp/>\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(buffer<sp/>+<sp/>cursor);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor--;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_cursor<sp/>=<sp/>cursor;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buffer[temp_cursor<sp/>+<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[temp_cursor]<sp/>=<sp/>buffer[temp_cursor<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[temp_cursor<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cursor++;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters_in_buffer--;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>characters_in_buffer;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cursor<sp/>&lt;<sp/>99)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//HANDLING<sp/>THE<sp/>DELETE<sp/>KEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\033[3~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\033[K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[cursor<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\b<sp/>\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(buffer<sp/>+<sp/>cursor);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_cursor<sp/>=<sp/>cursor<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buffer[temp_cursor<sp/>+<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[temp_cursor]<sp/>=<sp/>buffer[temp_cursor<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[temp_cursor<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cursor++;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters_in_buffer--;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>characters_in_buffer;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\033&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>HANDLEING<sp/>FIRST<sp/>CHARACTER<sp/>FOR<sp/>ARROW<sp/>KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log[0]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>log[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\033&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>HANDLEING<sp/>SECOND<sp/>CHARACTER<sp/>FOR<sp/>ARROW<sp/>KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log[1]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\033&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>log[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>HANDLEING<sp/>LAST<sp/>CHARACTER<sp/>FOR<sp/>ARROW<sp/>KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log[2]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//Up<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Call<sp/>a<sp/>history<sp/>function<sp/>from<sp/>the<sp/>commhand<sp/>or<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//Down<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Call<sp/>a<sp/>history<sp/>command<sp/>from<sp/>the<sp/>commhand<sp/>or<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cursor<sp/>!=<sp/>99)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//Right<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\033[C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard_character<sp/>==<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cursor<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//Left<sp/>arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\033[D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor--;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1ace6ee45c30e71865e6eb635200379db9" kindref="member">memset</ref>(log,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>buffer[cursor]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//Adding<sp/>character<sp/>at<sp/>beginning<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[cursor]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(buffer<sp/>+<sp/>cursor);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[cursor]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//Adding<sp/>character<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[cursor]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(buffer<sp/>+<sp/>cursor);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Inserting<sp/>character<sp/>to<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp_buffer[<ref refid="string_8h_1a2dee044e4e667b5b789b493abd21cfa4" kindref="member">strlen</ref>(buffer)];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1ace6ee45c30e71865e6eb635200379db9" kindref="member">memset</ref>(temp_buffer,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/><ref refid="string_8h_1a2dee044e4e667b5b789b493abd21cfa4" kindref="member">strlen</ref>(buffer));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_cursor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp_cursor<sp/>&lt;=<sp/>characters_in_buffer)<sp/></highlight><highlight class="comment">//Filling<sp/>the<sp/>temp_buffer<sp/>with<sp/>all<sp/>of<sp/>the<sp/>characters<sp/>from<sp/>buffer,<sp/>and<sp/>inserting<sp/>the<sp/>new<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_cursor<sp/>&lt;<sp/>cursor)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_buffer[temp_cursor]<sp/>=<sp/>buffer[temp_cursor];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_cursor<sp/>&gt;<sp/>cursor)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_buffer[temp_cursor]<sp/>=<sp/>buffer[temp_cursor<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//temp_cursor<sp/>==<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_buffer[temp_cursor]<sp/>=<sp/>keyboard_character;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cursor++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cursor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_buffer_size<sp/>=<sp/><ref refid="string_8h_1a2dee044e4e667b5b789b493abd21cfa4" kindref="member">strlen</ref>(temp_buffer);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp_cursor<sp/>&lt;=<sp/>temp_buffer_size)<sp/></highlight><highlight class="comment">//Setting<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>buffer<sp/>equal<sp/>to<sp/>the<sp/>temp_buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[temp_cursor]<sp/>=<sp/>temp_buffer[temp_cursor];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cursor++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(</highlight><highlight class="stringliteral">&quot;\033[K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(&amp;keyboard_character);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial_8c_1a995827efcd4dcfb780c9fbb9645410a4" kindref="member">serial_print</ref>(buffer<sp/>+<sp/>cursor<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters_in_buffer++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>*count<sp/>=<sp/>characters_in_buffer;<sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kernel/core/serial.c"/>
  </compounddef>
</doxygen>
